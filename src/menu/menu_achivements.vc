/*
 * menu_achivements.vc
 *
 * The achivements menu. Where you can show off how good you are at the game by getting worthless
 * medals.
 *
 */

#define MENU_LEADERBOARD_NUM_ROWS		10
#define MENU_LEADERBOARD_NUM_ACHIVEMENTS	6

#define MENU_LEADERBOARD_ROWS			2
 
string sAchivementData;
int nAchivementDirty;	//if ==1 we need to request data from the server again, otherwise party like it's 2k7

int nAchievementConnectedToServer;	//if ==0 we are not connected. Write an error message to menu

struct AchivementData
{
	string sUsername;
	int iId;
	string sAchivementsUnlocked[MENU_LEADERBOARD_NUM_ACHIVEMENTS];
	int sAchivementIcons[MENU_LEADERBOARD_NUM_ACHIVEMENTS];
}

AchivementData sAchivementUsers[MENU_LEADERBOARD_NUM_ROWS];

int nAchivementsStartIndex;
int nAchievementNumUsers;

int nAchievementPointer;

void OpenAchivementMenu()
{
	nAchivementDirty=1;
	nAchievementConnectedToServer=0;
	nAchivementsStartIndex = 0;
	nAchievementPointer = 0;
	CreateMenu(1, 50, GetMenuTemplateIndex("MenuAchivement"));

	OpenMessageMenu("Connecting to leaderboard server...");
	nMenuX = ActiveMenus[TopMenuStack()].nX;
	nMenuY = ActiveMenus[TopMenuStack()].nY;
	MenuMessageDraw();
	ShowPage();

	AchivementSyncUp();

	MenuAchivementGetServerData();
	
	CloseTopMenu();
}

void MenuAchivementDraw()
{
	int img = CreateWindow("Achievements", 318, 120, nTerminalFont);
	int i, j, sizeTmp;
	int x,y;
	
	i=0;
	
	if(nAchievementConnectedToServer)
	{
		PrintString(8, 16, img, nTerminalFont, "People with achievements for this game:");
		
		//print usernames
		for(j=0;j<MENU_LEADERBOARD_NUM_ROWS;j++)
		{
			PrintString(16, 32+(j*8), img, nTerminalFont, sAchivementUsers[j].sUsername);
		}
		
		x=0;
		y=0;
		//print achivements for this user
		for(j=0;j<MENU_LEADERBOARD_NUM_ACHIVEMENTS;j++)
		{
			if(ImageValid(sAchivementUsers[nAchievementPointer].sAchivementIcons[j]))
				TBlit(80+(x*88), 32+(y*32), sAchivementUsers[nAchievementPointer].sAchivementIcons[j], img);
			PrintString(64+(x*88), 56+(y*32), img, nTerminalFont, sAchivementUsers[nAchievementPointer].sAchivementsUnlocked[j]);
			
			y++;

			if(j%MENU_LEADERBOARD_ROWS != 0)
			{
				x++;
				y=0;
			}
		}
		
		//blit the pointer
		RectFill(8, 32+(nAchievementPointer*8), 11, 36+(nAchievementPointer*8), RGB(0, 255, 0), img);		
	}
	else
	{
		PrintString(8, 16, img, nTerminalFont, "Could not connect to achievements server!");
	}
	
	Blit(nMenuX, nMenuY, img, screen);
}

void MenuAchivementGetServerData()
{
	sAchivementData = getInetData(LEADERBOARD_URL + "achivementsUsersGame.php?game=" + str(LEADERBOARD_GAME_ID) + "&xml");

	//Weirdest error code ever. Guess it's better then the "verge crashes" error code.
	if(CheckLeaderboardResponse(sAchivementData))
		nAchievementConnectedToServer = 1;
	else
		nAchievementConnectedToServer = 0;
}


void MenuAchivementLogic()
{
	int i, j, k;
	int UserDict, achDict;
	int tmpDict;
	string userAchData;

	//parse the XML data into the scructs as needed
	if(nAchivementDirty)
	{
		OpenMessageMenu("Connecting to leaderboard server...");
		nMenuX = ActiveMenus[TopMenuStack()].nX;
		nMenuY = ActiveMenus[TopMenuStack()].nY;
		MenuMessageDraw();
		ShowPage();

		nAchivementDirty = 0;

		if(nAchievementConnectedToServer)
		{
			//parse the XML!
			UserDict = XMLParseGetNodes(sAchivementData, "user");

			//get the usernames
			i=nAchivementsStartIndex;
			k=0;
			
			nAchievementNumUsers = DictSize(UserDict);
			while(k < MENU_LEADERBOARD_NUM_ROWS && i < nAchievementNumUsers)
			{
				//get username
				tmpDict = XMLParseGetNodes(DictGetString(UserDict, str(i)), "name");
				sAchivementUsers[k].sUsername = DictGetString(tmpDict, "0");
				DictFree(tmpDict);
				
				//get id
				tmpDict = XMLParseGetNodes(DictGetString(UserDict, str(i)), "id");
				sAchivementUsers[k].iId = val(DictGetString(tmpDict, "0"));
				DictFree(tmpDict);
				
				//get this users achivements
				userAchData = getInetData(LEADERBOARD_URL + "achivementsUser.php?user=" + str(sAchivementUsers[k].iId) + "&game=" + str(LEADERBOARD_GAME_ID) + "&xml");

				if(!CheckLeaderboardResponse(sAchivementData))
				{
					nAchievementConnectedToServer = 0;
					return;
				}
				else
					nAchievementConnectedToServer = 1;

				achDict = XMLParseGetNodes(userAchData, "achivement");

				//clear the list
				for(j=0;j<MENU_LEADERBOARD_NUM_ACHIVEMENTS;j++)
				{
					sAchivementUsers[k].sAchivementsUnlocked[j] = "";
					if(ImageValid(sAchivementUsers[k].sAchivementIcons[j]))
						FreeImage(sAchivementUsers[k].sAchivementIcons[j]);
				}
				
				for(j=0;j<DictSize(achDict);j++)
				{
					//get name
					tmpDict = XMLParseGetNodes(DictGetString(achDict, str(j)), "name");
					sAchivementUsers[k].sAchivementsUnlocked[j] = DictGetString(tmpDict, "0");
					DictFree(tmpDict);
					
					tmpDict = XmlParseGetNodes(DictGetString(achDict, str(j)), "id");
					sAchivementUsers[k].sAchivementIcons[j] = GetAchivementIcon(val(DictGetString(tmpDict, "0")));
					DictFree(tmpDict);
				}
				DictFree(achDict);

				i++;
				k++;
			}
			
			DictFree(UserDict);
		}
		
		CloseTopMenu();
	}
	
	if(BUTTON_MEDKIT)
	{
		SoundKeyboardRand();
		CloseTopMenu();
	}
	
	if(up)
	{
		SoundKeyboardRand();
		nAchievementPointer--;
		
		if(nAchievementPointer < 0)
		{
			nAchievementPointer=0;
			
			if(nAchivementsStartIndex > 0)
			{
				nAchivementDirty = 1;
				nAchivementsStartIndex--;
			}
		}
			
		unpress(5);
	}
	
	if(down)
	{
		SoundKeyboardRand();
		nAchievementPointer++;
		
		if(nAchievementPointer > MENU_LEADERBOARD_NUM_ROWS-1)
		{
			nAchievementPointer=MENU_LEADERBOARD_NUM_ROWS-1;
			
			if(nAchivementsStartIndex+MENU_LEADERBOARD_NUM_ROWS < nAchievementNumUsers)
			{
				nAchivementDirty = 1;
				nAchivementsStartIndex++;
			}
		}

		unpress(6);
	}
}

void MenuAchivementClose()
{
}

//gets the icon for an achivement from the internet
int GetAchivementIcon(int i)
{
	int retval;
	
	//if GetUrlImage has a bad URL verge dies :((
	//guess we'll just have to make sure it dosen't fail...
	retval = GetUrlImage(LEADERBOARD_URL + "achivementIcon.php?id=" + str(i));
	
	if(ImageValid(retval))
		return retval;
	else
		return LoadImage("gfx\misc\achivementNoIcon.png");
}