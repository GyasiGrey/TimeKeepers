int nOptionsMenuAnim;

void OpenOptionsMenu()
{
	SetEntitiesPaused(1);
	nPointerPos = 0;
	nOptionsMenuAnim = LoadAnimationEX("cursor.png", 8, 8, 134, 154, ANIMATION_CURSOR_ANIM_STRING);
	anims[nOptionsMenuAnim].automatic = 0;
	
	CreateMenu(130, 140, GetMenuTemplateIndex("MenuOptions"));
}


void MenuOptionsDraw()
{

	int i;
	string tmp;
	int img = CreateWindow("Options", 120, 56, nTerminalFont);
	
//	PrintString(12, 14, img, nTerminalFont, "CommText Speed: " + str(nCommLetterWait));
	
	if(bLightsEnabled)
		tmp = "Lighting: On";
	else
		tmp = "Lighting: Off";
	PrintString(12, 14, img, nTerminalFont, tmp);

	if(bParticlesEnabled)
		tmp = "Particles: On";
	else
		tmp = "Particles: Off";
	PrintString(12, 22, img, nTerminalFont, tmp);

	if(bAmbientSoundEnabled)
		tmp = "Ambient Sound: On";
	else
		tmp = "Ambient Sound: Off";
	PrintString(12, 30, img, nTerminalFont, tmp);

	PrintString(12, 38, img, nTerminalFont, "Key Config");
	PrintString(12, 46, img, nTerminalFont, "Close");
	
	Blit(nMenuX, nMenuY, img, screen);	
	FreeImage(img);
	
	DrawAnimation(nOptionsMenuAnim);
}

void MenuOptionsLogic()
{
	anims[nOptionsMenuAnim].y = 154 + (nPointerPos*8);
	
	if(up)
	{
		SoundKeyboardRand();
		
		if(nPointerPos > 0)
			nPointerPos--;
		else 
			nPointerPos = 4;
			
		unpress(5);
	}
	else if(down)
	{
		SoundKeyboardRand();
		
		if(nPointerPos < 4)
			nPointerPos++;
		else
			nPointerPos = 0;
			
		unpress(6);
	}
	else if(left)
	{
		/*if(nPointerPos == 0)
		{
			if(nCommLetterWait > 1)
				nCommLetterWait--;
		}
		else */if(nPointerPos == 0)
		{
			if(bLightsEnabled == 1)
				bLightsEnabled = 0;
			else
				bLightsEnabled = 1;
				
			SoundKeyboardRand();
		}
		else if(nPointerPos == 1)
		{
			if(bParticlesEnabled == 1)
				bParticlesEnabled = 0;
			else
				bParticlesEnabled = 1;
				
			SoundKeyboardRand();
		}
		else if(nPointerPos == 2)
		{
			if(bAmbientSoundEnabled == 1)
				bAmbientSoundEnabled = 0;
			else
				bAmbientSoundEnabled = 1;
				
			SoundKeyboardRand();
		}
		
		unpress(7);
	}
	else if(right)
	{
		/*if(nPointerPos == 0)
		{
			if(nCommLetterWait < 5)
				nCommLetterWait++;
		}
		else */if(nPointerPos == 0)
		{
			if(bLightsEnabled == 1)
				bLightsEnabled = 0;
			else
				bLightsEnabled = 1;
				
			SoundKeyboardRand();
		}
		else if(nPointerPos == 1)
		{
			if(bParticlesEnabled == 1)
				bParticlesEnabled = 0;
			else
				bParticlesEnabled = 1;
				
			SoundKeyboardRand();
		}
		else if(nPointerPos == 2)
		{
			if(bAmbientSoundEnabled == 1)
				bAmbientSoundEnabled = 0;
			else
				bAmbientSoundEnabled = 1;
				
			SoundKeyboardRand();
		}
	
			
		unpress(8);
	}
	else if(BUTTON_SHOOT)
	{
		UnpressButtons();
		if(nPointerPos == 3)
		{
			SoundKeyboardRand();
			
			OpenKeyConfigMenu();
		}
		else if(nPointerPos == 4)
		{
			SoundKeyboardRand();
			
			//resume game
			CloseTopMenu();
		}
	}
	else if(BUTTON_MEDKIT)
	{
		SoundKeyboardRand();
		
		CloseTopMenu();
		UnpressButtons();
	}
}

void MenuOptionsClose()
{
	//save the options to config.sav
	int hndl = FileOpen("config.sav", FILE_WRITE);
	FileWriteByte(hndl, bLightsEnabled);
	FileWriteByte(hndl, bParticlesEnabled);
	FileWriteByte(hndl, bAmbientSoundEnabled);
//	FileWriteByte(hndl, nCommLetterWait);
	FileClose(hndl);
	FreeAnimation(nOptionsMenuAnim);
}
