//this puts scan lines over the screen to make it look like a TV
//should be called after the game world, before the gui
void TVEffectScanLineRetrace()
{
	int y;
	int screenwidth = ImageWidth(screen);
	int screenheight = ImageHeight(screen);
	
	for(y=0;y<screenheight;y+=2)
	{
		SetLucent(50);
		Line(0, y, screenwidth, y, RGB(0, 0, 0), screen);
		SetLucent(0);
	}
}

void StartScanLine()
{
	AddHook("TVEffectScanLineRetrace", 1450);
}

void RemoveScanLine()
{
	Removehook("TVEffectScanLineRetrace");
}

int nStaticLuc = 0;

//this generates static over the screen
//should be called after the game world, before the gui
void TVEffectStaticRetrace()
{
	int x, y;
	int screenwidth = ImageWidth(screen);
	int screenheight = ImageHeight(screen);
	int tmpImg = NewImage(screenwidth, screenheight);
	
	for(x=0;x<screenwidth;x++)
	{
		for(y=0;y<screenheight;y++)
		{
			if(random(0, 1) == 0)
			{
				SetPixel(x, y, RGB(0, 0, 0), tmpImg);
			}
			else
			{
				SetPixel(x, y, RGB(255, 255, 255), tmpImg);
			}
		}
	}
	
	setlucent(nStaticLuc);
	blit(0, 0, tmpImg, screen);
	setlucent(0);
	
	FreeImage(tmpImg);
}

void StartStatic()
{
	AddHook("TVEffectStaticRetrace", 1400);
}

void RemoveStatic()
{
	Removehook("TVEffectStaticRetrace");
}

int nVCRMode;		// ==0 for pause ( || ), ==1 for play ( |> )
int nVCRModeBit;	// ==1 when the VCR mode is displayed, ==0 when not
int nVCRModeTimer;	// what timer should be when it is time to swap nVCRModeBit
int nVCRModeDelay=50;	// delay between flips of nVCRModeBit

void StartVCR()
{
	AddHook("TVEffectVCRMode", 1350);
}

void RemoveVCR()
{
	RemoveHook("TVEffectVCRMode");
}

//draws the VCR mode in the top right of the screen
//in big white pictogram things
void TVEffectVCRMode()
{
	int x = 270;
	int y = 10;
	
	if(nVCRModeBit)
	{
		if(nVCRMode == 0)
		{
			RectFill(x, y, x+12, y+42, RGB(255, 255, 255), screen);			//left pause bar
			RectFill(x+24, y, x+36, y+42, RGB(255, 255, 255), screen);		//right pause bar
		}
		else if(nVCRMode == 1)
		{
			Triangle(x, y, x, y+42, x+36, y+21, RGB(255, 255, 255), screen);	//play arrow. onoes I used the bad triangle function
		}
	}
	
	if(timer >= nVCRModeTimer)
	{
		if(nVCRModeBit == 1)
			nVCRModeBit = 0;
		else
			nVCRModeBit = 1;
			
		nVCRModeTimer = timer + nVCRModeDelay;
	}
}