void start()
{
	SpawnPlayer(33, 19);

	sAreaName = "Mission 3";
	
	nGlobalLight = 100;

	SetLowObsZone(1);

	InitMap(3);

	if(!nFlags[FLAG_MISSION3_TECH_GHOST_START])
	{
		nHoldCommText = 1;
		CommText("Ghost: What..the...shit...");
		CommText("Tech: Oh, Your Highness is awake. Nice of you to join me, looks like we have the penthouse suite.");
		CommText("Ghost: Funny man. Fuuuuny. How about making yourself usefull and telling me what happened?");
		CommText("Tech: What happened is we got caught. I don't know how but our gracious hosts found us, raided us and put us here.");
		CommText("Ghost: So now what?");
		CommText("Tech: Well, since I'm not the breaking and entering type I suggest that you find a way out.");
		CommText("Tech: They didn't take my radio so we should still be able to communicate.");
		CommText("Ghost: Ahhh...");
		CommText("Tech: What..");
		CommText("Ghost: They took all my gear.");
		CommText("Tech: What were you expecting? We're prisoners.");
		CommText("Ghost: Yeah, but..");
		CommText("Tech: Your name is 'Ghost'. That would imply stealth right? How about you try it?");
		CommText("Ghost: Such harsh words.");
		CommText("Tech: I hurt because I care.");
		CommText("Ghost: About yourself.");
		CommText("Tech: Well, yeah.");
		WaitForCommText();
		nHoldCommText = 0;

		nFlags[FLAG_MISSION3_TECH_GHOST_START] = 1;

		createObjective("escapejail", "Find some way to escape the jail cell.");

		QuickSave();
	}
}

void InitDoors()
{
	//jail doors
	nFlags[FLAG_MISSION3_JAIL_DOOR_ID] = CreateDoor(34, 22, LoadImage("gfx\misc\jail_door.png"), -2);
	CreateDoor(22, 22, LoadImage("gfx\misc\jail_door.png"), -2);
	
	CreateDoor(22, 29, LoadImage("gfx\misc\jail_door.png"), -2);
	CreateDoor(34, 29, LoadImage("gfx\misc\jail_door.png"), -2);
	
	CreateDoor(39, 18, LoadImage("gfx\misc\locker_door.png"), -1);
	CreateDoor(46, 18, LoadImage("gfx\misc\locker_door.png"), -1);
	
	nFlags[FLAG_MISSION3_JAIL_ELEVATOR_DOOR_ID] = CreateDoor(43, 17, LoadImage("gfx\misc\elevator_door.png"), -2);
	nFlags[FLAG_MISSION3_LOBBY_ELEVATOR_DOOR_ID] = CreateDoor(110, 114, LoadImage("gfx\misc\elevator_door.png"), -2);
	nFlags[FLAG_MISSION3_MAIN_ELEVATOR_DOOR_ID] = CreateDoor(78, 15, LoadImage("gfx\misc\elevator_door.png"), -2);
	
	nFlags[FLAG_MISSION3_DOOR_ARMORY_PISTOL] = CreateDoor(88, 141, LoadImage("gfx\misc\locker_door.png"), -2);
	nFlags[FLAG_MISSION3_DOOR_ARMORY_MAIN] = CreateDoorEX(96, 128, LoadImage("gfx\misc\blastdoor_closed.png"), -2, 4, 2);
	CreateDoorEX(99, 113, LoadImage("gfx\misc\blastdoor_closed.png"), 0, 4, 2);
	CreateDoor(88, 155, LoadImage("gfx\misc\locker_door.png"), -2);
	CreateDoor(73, 155, LoadImage("gfx\misc\locker_door.png"), -2);
	CreateDoor(73, 141, LoadImage("gfx\misc\locker_door.png"), -2);
	
	CreateDoor(150, 113, LoadImage("gfx\misc\locker_door.png"), -1);
}

void InitEnemies()
{
	nFlags[FLAG_MISSION3_JAIL_GUARD_ID] = CreateEnemy(43, 19, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_PISTOL, "Y24X20R0W500X43Y19D0W500B", "tk.chr");

	CreateEnemy(22, 19, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_CIVILIAN, "", "tech.chr");
	
	CreateEnemy(143, 109, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_PISTOL, "X158Y85X143Y109B", "tk.chr");
	
	CreateEnemy(80, 143, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_PISTOL, "Y158L0W300X65U0W300Y143R0W300Y131R0W300X80D0W300Y143D0W300B", "tk.chr");
	CreateEnemy(82, 131, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_PISTOL, "X96D0W300Y143L0W300X83R0W300X96U0W300Y158L0W300X83R0W300X96U0W300Y131L0W300X82R0W300B", "tk.chr");
	
	CreateEnemy(96, 209, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_ROBOT, "", "robot.chr");
}

void InitLoot()
{
	nFlags[FLAG_MISSION3_TOILET_ID] = CreateLoot(37*16, 18*16, "", 0, "", "Flush", 0);
	CreateLoot(77*16, (15*16)-8, "", 0, "", "MainElevatorButton", 1);
	CreateLoot(110*16, (90*16)-8, "", 0, "", "LobbyElevatorButton", 1);
	CreateLoot(42*16, (17*16)-8, "", 0, "", "JailElevatorButton", 1);
	CreateLoot(85*16, 136*16, "Pistol", 0, "pistol.png", "GetPistol", 0);
	
	CreateLoot(150*16, 113*16, "Card Rank 1", 0, "card.png", "GetKeyCard1", 0);
	
	CreateLoot(165*16, 112*16, "", 0, "", "TrapDoor", 0);
	
	CreateLoot(87*16, 98*16, "Medkit", 0, "medkit.png", "GetMedkitLoot", 0);
	CreateLoot(88*16, 98*16, "Medkit", 0, "medkit.png", "GetMedkitLoot", 0);
	
	CreateLoot(70*16, 150*16, "", 0, "", "ArmoryToSewer", 0);
}

//ALWAYS flush
void Flush()
{
	if(!IsDelayedCallbackActive("ResetToilet") && nFlags[FLAG_MISSION3_TOILET_FLUSHES] < 5)
	{
		nFlags[FLAG_MISSION3_TOILET_FLUSHES]++;

		SoundFlush();

		//delayed callback to unsteal the loot so the player can't just activate it 10 times quickly
		CreateDelayedCallback(200, "ResetToilet");

		if(nFlags[FLAG_MISSION3_TOILET_FLUSHES] >= 5)
		{
			bCanSave = 0;
			
			CommText("Guard: Oh what in the...");
			
			//keep the player from moving
			CripplePlayer();
			
			//make the enemy passive so they won't shoot the player
			Enemies[nFlags[FLAG_MISSION3_JAIL_GUARD_ID]].nPassive = 1;
			Entity.obstructable[Enemies[nFlags[FLAG_MISSION3_JAIL_GUARD_ID]].nEntity] = 0;
			
			AchivementUnlocked(5);
			
			//flood the cell
			
			//walk the guard over to the door
			StopEnemy(nFlags[FLAG_MISSION3_JAIL_GUARD_ID]);
			Goto(Enemies[nFlags[FLAG_MISSION3_JAIL_GUARD_ID]].nEntity, 34*16, 23*16);
			WaitForEnemy(nFlags[FLAG_MISSION3_JAIL_GUARD_ID]);

			//open the door
			ManualOpenDoor(nFlags[FLAG_MISSION3_JAIL_DOOR_ID]);
			
			WaitTimer(50);

			//walk the guard through the door
			
			Goto(Enemies[nFlags[FLAG_MISSION3_JAIL_GUARD_ID]].nEntity, 36*16, 20*16);
			CommText("Guard: I do not get paid enough for this...");
			WaitForEnemy(nFlags[FLAG_MISSION3_JAIL_GUARD_ID]);
			
			WaitTimer(50);
			
			//let the player move again
			UnCripplePlayer();
		}
	}
}

void ResetToilet()
{
	Loots[nFlags[FLAG_MISSION3_TOILET_ID]].nStolen = 0;
}

void EscapeCell()
{
	if(!nFlags[FLAG_MISSION3_ESCAPE_FLOOD])
	{
		//called from map zone when the player escapes the jail cell by flooding it

		//cripple the player
		CripplePlayer();

		//turn the player around
		EntityMove(nPlayerEnt, "U0");

		//taunt the guard
		nHoldCommText = 1;
		CommText("Ghost: Maybe your employers should consider paying you less.");
		WaitForCommText();
		EntityMove(Enemies[nFlags[FLAG_MISSION3_JAIL_GUARD_ID]].nEntity, "D0");
		CommText("Guard: Huh?...ahhh crap.");
		WaitForCommText();
		nHoldCommText = 0;

		//close the door
		ManualCloseDoor(nFlags[FLAG_MISSION3_JAIL_DOOR_ID]);

		//clear the objective
		completeObjective("escapejail");

		//set next objective
		createObjective("getequip", "Find some equipment.");
		createObjective("investigatetk", "Find out more about the captors.");
		createObjective("escapebase", "Find an escape.");

		//uncripple the player
		UnCripplePlayer();
		
		bCanSave = 1;
		
		nFlags[FLAG_MISSION3_ESCAPE_FLOOD] = 1;
		
		CreateDelayedCallback(1000, "SpawnJailSquad");
	}
}

//spawn two guards 
void SpawnJailSquad()
{
	int spawnedGuard1;
	
	SoundElevatorHere();
	ManualOpenDoor(nFlags[FLAG_MISSION3_JAIL_ELEVATOR_DOOR_ID]);
	spawnedGuard1 = CreateEnemy(43, 15, ENTITY_FACE_DOWN, ENEMY_TEMPLATE_PISTOL, "", "tk.chr");
	
	Goto(Enemies[spawnedGuard1].nEntity, 38*16, 24*16);
}

void WarpToElevator()
{
	nFlags[FLAG_MISSION3_ELEVATOR_ACCESS] = 1;
	
	FadeOutExclusive(50, RGB(0, 0, 0));
	ManualCloseDoor(nFlags[FLAG_MISSION3_MAIN_ELEVATOR_DOOR_ID]);
	Warp(78, 16);
	FadeInExclusive(50, RGB(0, 0, 0));
	
	CloseLobbyElevatorDoor();
	CloseInnerElevatorDoor();
	CloseJailElevatorDoor();
}

void MainElevatorButton()
{
	Loots[nCurrentLoot].nStolen = 0;

	if(nFlags[FLAG_MISSION3_ELEVATOR_ACCESS] == 0 || IsDelayedCallbackActive("InnerElevatorArrived") || IsDelayedCallbackActive("CloseInnerElevatorDoor"))
		return;

	switch(nFlags[FLAG_MISSION3_ELEVATOR_FLOOR])
	{
		//if the player is at the jail, send them to the main level
		case 0:
			nFlags[FLAG_MISSION3_ELEVATOR_FLOOR] = 1;
		//if the player is at the main level, send them to the jail
		case 1:
			nFlags[FLAG_MISSION3_ELEVATOR_FLOOR] = 0;
	}
	
	StartShake(1, 20);
	CreateDelayedCallback(500, "InnerElevatorArrived");
}

void InnerElevatorArrived()
{
	ManualOpenDoor(nFlags[FLAG_MISSION3_MAIN_ELEVATOR_DOOR_ID]);
	StartShake(1, 20);
	CreateDelayedCallback(500, "CloseInnerElevatorDoor");
}

void JailElevatorButton()
{
	Loots[nCurrentLoot].nStolen = 0;

	if(nFlags[FLAG_MISSION3_ELEVATOR_ACCESS] == 0 || IsDelayedCallbackActive("JailElevatorArrived") || IsDelayedCallbackActive("CloseJailElevatorDoor"))
		return;

	CreateDelayedCallback(500, "JailElevatorArrived");
}

void JailElevatorArrived()
{
	ManualOpenDoor(nFlags[FLAG_MISSION3_JAIL_ELEVATOR_DOOR_ID]);
	CreateDelayedCallback(500, "CloseJailElevatorDoor");
}

void LobbyElevatorButton()
{
	Loots[nCurrentLoot].nStolen = 0;

	if(nFlags[FLAG_MISSION3_ELEVATOR_ACCESS] == 0 || IsDelayedCallbackActive("LobbyElevatorArrived") || IsDelayedCallbackActive("CloseLobbyElevatorDoor"))
		return;

	CreateDelayedCallback(500, "LobbyElevatorArrived");
}

void LobbyElevatorArrived()
{
	ManualOpenDoor(nFlags[FLAG_MISSION3_LOBBY_ELEVATOR_DOOR_ID]);
	CreateDelayedCallback(500, "CloseLobbyElevatorDoor");
}

void CloseLobbyElevatorDoor()
{
	ManualCloseDoor(nFlags[FLAG_MISSION3_LOBBY_ELEVATOR_DOOR_ID]);
}

void CloseInnerElevatorDoor()
{
	ManualCloseDoor(nFlags[FLAG_MISSION3_MAIN_ELEVATOR_DOOR_ID]);
}

void CloseJailElevatorDoor()
{
	ManualCloseDoor(nFlags[FLAG_MISSION3_JAIL_ELEVATOR_DOOR_ID]);
}

void ExitElevator()
{
	FadeOutExclusive(50, RGB(0, 0, 0));
	ManualCloseDoor(nFlags[FLAG_MISSION3_MAIN_ELEVATOR_DOOR_ID]);

	switch(nFlags[FLAG_MISSION3_ELEVATOR_FLOOR])
	{
		//if the player is at the jail
		case 0:
			Warp(43, 18);
		//if the player is at the main level
		case 1:
			Warp(110, 115);
	}

	FadeInExclusive(50, RGB(0, 0, 0));
}

void CatwalkNoise()
{
	if(vcTimer[TIMER_ENEMY_LOGIC].nTick > nFlags[FLAG_MISSION3_CATWALK_NOISE])
	{
		//make noise as the player walks over the cat walk
		nFlags[FLAG_MISSION3_CATWALK_NOISE] = vcTimer[TIMER_ENEMY_LOGIC].nTick + 50;
		MakeSound(nPlayerEnt, 200);
		SoundMetalStep();
	}
}

void GetKeyCard1()
{
	nFlags[FLAG_MISSION3_KEYCARD_1] = 1;
	
	//unlock the main armory door and the pistol room in the armory
	ManualUnlockDoor(nFlags[FLAG_MISSION3_DOOR_ARMORY_MAIN]);
	ManualUnlockDoor(nFlags[FLAG_MISSION3_DOOR_ARMORY_PISTOL]);
}

void GetKeyCard2()
{
	nFlags[FLAG_MISSION3_KEYCARD_2] = 1;
}

void GetKeyCard3()
{
	nFlags[FLAG_MISSION3_KEYCARD_3] = 1;
}

void GetKeyCard4()
{
	nFlags[FLAG_MISSION3_KEYCARD_4] = 1;
}

void GetKeyCard5()
{
	nFlags[FLAG_MISSION3_KEYCARD_5] = 1;
}

void TrapDoor()
{
	Warp(147, 300);
	Loots[nCurrentLoot].nStolen = 0;
}

void SewerToComputerRoom()
{
	Warp(166, 112);
}

void ArmoryToSewer()
{
	Warp(74, 312);
	Loots[nCurrentLoot].nStolen = 0;
}

void SewerToArmory()
{
	Warp(71, 150);
}


void stub1()
{
	MessageBox("Do some crap to let the player spy on the hallway just south off the computer room");
}