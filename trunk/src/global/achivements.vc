//Yes I know. I misspelled Achievement almost everywhere. Shut up.

//Code to send achivements to server. Hmmm...could calling them "Achivements" be taken as copyright infringemen?

struct AchivementDef
{
	int nID;		//the server ID of this achivement
	int nLocalUnlocked;	//has the player unlocked it?
	int nServerUnlocked;
};

AchivementDef pAchivements[ACHIVEMENT_NUM_ACHIVEMENTS];


void InitAchievements()
{
	//1 silent kill
	pAchivements[0].nId = 1;
	pAchivements[0].nLocalUnlocked = 0;
	pAchivements[0].nServerUnlocked = 0;

	//5 picked locks
	pAchivements[1].nId = 2;
	pAchivements[1].nLocalUnlocked = 0;
	pAchivements[1].nServerUnlocked = 0;	

	//lost all money at the slots
	pAchivements[2].nId = 3;
	pAchivements[2].nLocalUnlocked = 0;
	pAchivements[2].nServerUnlocked = 0;
	
	//mission 1 speed run
	pAchivements[3].nId = 4;
	pAchivements[3].nLocalUnlocked = 0;
	pAchivements[3].nServerUnlocked = 0;
	
	//mission 2 speed run
	pAchivements[4].nId = 5;
	pAchivements[4].nLocalUnlocked = 0;
	pAchivements[4].nServerUnlocked = 0;

	//flodded the toilet in mission 3
	pAchivements[5].nId = 6;
	pAchivements[5].nLocalUnlocked = 0;
	pAchivements[5].nServerUnlocked = 0;
}

int UploadAchivement(string username, string password, int achid)
{
	string send = LEADERBOARD_URL + "upload.php?achivement=" + username + "|" + password + "|" + str(achid);
	string retval;
	
	retval = GetUrlText(send);

	if(strcmp(retval, "ERR_SUCCESS")==0)
		return 1;
	else if(strcmp(retval, "ERR_HAS_ACHIVEMENT")==0)
		return 2;
	else if(strcmp(retval, "ERR_BAD_PASS")==0)
		return -1;
	else
		return 0;
}

//Checks the profile file to see if the user has this achivement. 
//If they don't it does the achievement unlocked animation and sound, then writes the achievement to the file
void AchivementUnlocked(int achid)
{
	int hndl;
	string achText = "Achievement Unlocked!";
	
	if(bSendTrackedStats == 1)	//player is allowing stuff to be uploaded
	{
		hndl = FileOpen("profile.sav", FILE_READ);
		ReadProfileData(hndl);
		
		//if the data loaded out of the profile is false for this achivement
		if(!pAchivements[achid].nLocalUnlocked)
		{
			//do the sound and anim, mark it in the file and save it
			
			SoundAchivement();	//achivement sound!
			lucentTextFade((ImageWidth(screen)/2)-(TextWidth(nTinyFont, achText)/2), 30, achText, nTinyFont, RGB(255, 255, 255), 0);	//achievement anim
			pAchivements[achid].nLocalUnlocked = 1;
			WriteProfileData();
			Error("Achivement Unlocked: " + str(achid));
		}
	}
}

//Compares the achievements this user has on the server and in the profile file. 
//If the server has achievements the file does not, the file updates
void AchivementSyncDown()
{
	int tmpint, i, j, hndl;
	int userID, achDict, tmpDict;
	string tmpstring;
	
	//user is not tracking! abort abort!
	if(bSendTrackedStats != 1)
		return;
	
	//open profile file
	hndl = FileOpen("profile.sav", FILE_READ);
	
	if(hndl)
	{
		ReadProfileData(hndl);
		FileClose(hndl);
		
		//get all achievements for this user and game from server
		tmpstring = GetUrlText(LEADERBOARD_URL + "userLog.php?user=" + sTrackedStatsUsername + "&pass=" + sTrackedStatsPassword);
		
		if(strcmp(tmpstring, "couldn't open url") != 0)
		{
			userID = val(tmpstring);
			achDict = GetAchivementsDict(userID);

			//add any achievements that the local dosen't have
			for(j=0;j<DictSize(achDict);j++)
			{
				tmpDict = XmlParseGetNodes(DictGetString(achDict, str(j)), "id");
				pAchivements[AchivementsGetIndexForServerID(val(DictGetString(tmpDict, "0")))].nLocalUnlocked = 1;
				DictFree(tmpDict);
			}
			DictFree(achDict);
			
			
			//output file
			WriteProfileData();
		}
	}
}


//Compares the achievements this user has on the server and in the profile file. 
//If the profile has achievements the server does not, the server updates
void AchivementSyncUp()
{
	int hndl, userID, achDict, tmpDict, j;
	string tmpstring;
	
	if(bSendTrackedStats != 1)
		return;

	//open profile file
	hndl = FileOpen("profile.sav", FILE_READ);
	
	if(hndl)
	{
		ReadProfileData(hndl);
		FileClose(hndl);
		
		//get all achievements for this user and game
		tmpstring = GetUrlText(LEADERBOARD_URL + "userLog.php?user=" + sTrackedStatsUsername + "&pass=" + sTrackedStatsPassword);
		
		if(strcmp(tmpstring, "couldn't open url") != 0)
		{
			userID = val(tmpstring);
			achDict = GetAchivementsDict(userID);
			
			for(j=0;j<DictSize(achDict);j++)
			{
				tmpDict = XmlParseGetNodes(DictGetString(achDict, str(j)), "id");
				pAchivements[AchivementsGetIndexForServerID(val(DictGetString(tmpDict, "0")))].nServerUnlocked = 1;
				DictFree(tmpDict);
			}
			DictFree(achDict);

			//call UploadAchivement() for any achievements the server dosen't have
			for(j=0;j<ACHIVEMENT_NUM_ACHIVEMENTS;j++)
			{
				//if file is true, but server is false, send to server
				if(pAchivements[j].nLocalUnlocked==1 && pAchivements[j].nServerUnlocked==0)
				{
					UploadAchivement(sTrackedStatsUsername, sTrackedStatsPassword, pAchivements[j].nId);
				}
			}
		}
	}
}

void ReadProfileData(int hndl)
{
	int i, tmpint;
	string tmpstring;
	
	//skip header stuff
	tmpint = FileReadByte(hndl);
	tmpstring = FileReadString(hndl);
	tmpstring = FileReadString(hndl);

	//read ID, bool pairs of achievements
	i=0;
	while(!FileEOF(hndl) && i<ACHIVEMENT_NUM_ACHIVEMENTS)
	{
		pAchivements[i].nLocalUnlocked = FileReadByte(hndl);
		i++;
	}
}

void WriteProfileData()
{
	int i, hndl;
	
	SaveBasicProfileData();

	hndl = FileOpen("profile.sav", FILE_WRITE_APPEND);
	
	//read ID, bool pairs of achievements
	i=0;
	for(i=0;i<ACHIVEMENT_NUM_ACHIVEMENTS;i++)
	{
		FileWriteByte(hndl, pAchivements[i].nLocalUnlocked);
	}
}

int GetAchivementsDict(int user)
{
	string userAchData;
	int achDict, tmpDict;
	
	userAchData = GetUrlText(LEADERBOARD_URL + "achivementsUser.php?user=" + str(user) + "&game=" + str(LEADERBOARD_GAME_ID) + "&xml");

	if(strcmp(userAchData, "couldn't open url") == 0)
		return -1;

	achDict = XMLParseGetNodes(userAchData, "achivement");

	return achDict;
}

int AchivementsGetIndexForServerID(int achid)
{
	//cycle through achievement definitions and find one that has a nId of achid
	int i;
	
	for(i=0;i<ACHIVEMENT_NUM_ACHIVEMENTS;i++)
	{
		if(pAchivements[i].nId == achid)
			return i;
	}
	
	FatalError("Local achievement not found. Mabey try a new version?");
	
	return -1;
}