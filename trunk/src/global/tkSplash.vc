int nStaticStartTime;
int ntkSplashStaticOn = 0;
int ntkSplashLogo;

void tkSplashRender()
{
	//black out the background
	RectFill(0, 0, 320, 240, RGB(0, 0, 0), screen);
	//blit the logo
	TBlit(87, 68, ntkSplashLogo, screen);
	//if static is on, call it's render function
	if(ntkSplashStaticOn)
		TVEffectStaticRetrace();
}

void tkSplashWait(int i)
{
	nStaticStartTime = timer;
	
	//fade lucency to none
	while(timer-nStaticStartTime < i)
	{
		tkSplashRender();
		ShowPage();
	}
}

void tkSplash()
{
	//setup the vars for static
	nStaticImage = NewImage(ImageWidth(screen), ImageHeight(screen));

	ntkSplashLogo = IS_LoadImage("gfx\ui\logo.png");
	
	//start static
	ntkSplashStaticOn = 1;
	
	//set static lucency to opaque
	nStaticLuc = 0;
	
	nStaticStartTime = timer;
	
	//play sound to (hopefully) sync with the static
	SoundTKSplashIn();
	
	//fade lucency to none
	while(nStaticLuc < 100)
	{
		if(timer - nStaticStartTime >= 20)
		{
			nStaticStartTime = timer;
			nStaticLuc+=20;
		}

		tkSplashRender();
		ShowPage();
	}
	
	//flicker static a few times
	nStaticLuc = 50;
	ntkSplashStaticOn = 0;
	tkSplashWait(10);
	ntkSplashStaticOn = 1;
	tkSplashWait(20);
	ntkSplashStaticOn = 0;
	tkSplashWait(10);
	ntkSplashStaticOn = 1;
	tkSplashWait(10);
	ntkSplashStaticOn = 0;
	tkSplashWait(10);
	ntkSplashStaticOn = 1;
	tkSplashWait(10);

	//turn off static
	ntkSplashStaticOn = 0;
	
	//wait for b1
	while((BUTTON_SHOOT) == 0)
	{
		//press [b1] to continue
		tkSplashRender();
		PrintString(81, 166, screen, nDialogBoxFont, "Press [" + ScanToKeyName(nKeyButton[0]) + "] to continue");
		ShowPage();
	}

	//start static
	ntkSplashStaticOn = 1;
	nStaticLuc = 100;
	
	//fade static in
	nStaticStartTime = timer;

	SoundTKSplashOut();
	
	//fade to static
	while(nStaticLuc > 0)
	{
		if(timer - nStaticStartTime >= 20)
		{
			nStaticStartTime = timer;
			nStaticLuc-=20;
		}
		
		tkSplashRender();
		ShowPage();
	}

	//clean up
	ntkSplashStaticOn = 0;
	
	FreeImage(nStaticImage);
}