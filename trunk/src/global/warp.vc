//warp.vc - funcs to move the player between coords and between maps

int blurdist;

//move player to tile coords x, y
void Warp(int _x, int _y)
{
	entity.x[nPlayerEnt] = _x*16;
	entity.y[nPlayerEnt] = _y*16;
}

//do the effects for the timewarp, give the player there eq and warp them to the next map
//eq is | seperated integers
void TimeWarp(string eq, string nextmap)
{
	int starttime;

	int luc=0;
	int i;
	
	blurdist = 0;
	
	//remove the gui
	//RemoveGui();

	//init the blur stuff
	loadBlurBuffer();
	AddHook("DoBlur", 1005);
	
	starttime = timer;
	
	SoundTeleport();

	while(timer-starttime < 200) //2 seconds in time warp
	{
		Render();
		
		blurdist = (timer-starttime)/8;
		
		ShowPage();		
	}
	
	for(i=0;i<MAX_WEAPONS;i++)
	{
		nHasWeapon[i] = 0;
	}
	
	for(i=0;i<TokenCount(eq, "|");i++)
	{	

		nHasWeapon[val(GetToken(eq, "|", i))] = 1;
	}
	
	nEquipedWeapon = val(GetToken(eq, "|", 0));
	
	//reset enemy logic timer
	vcTimer[TIMER_ENEMY_LOGIC].nTick = 0;
	
	map(nextmap);
}

//same as TimeWarp() except no transition
void TimeWarpNoTrans(string eq, string nextmap)
{
	int starttime;

	int luc=0;
	int i;
	
	for(i=0;i<MAX_WEAPONS;i++)
	{
		nHasWeapon[i] = 0;
	}
	
	for(i=0;i<TokenCount(eq, "|");i++)
	{	

		nHasWeapon[val(GetToken(eq, "|", i))] = 1;
	}
	
	nEquipedWeapon = val(GetToken(eq, "|", 0));
	
	//reset enemy logic timer
	vcTimer[TIMER_ENEMY_LOGIC].nTick = 0;
	
	map(nextmap);
}


void DoBlur()
{
	focalBlur(20, blurdist, screen);
}