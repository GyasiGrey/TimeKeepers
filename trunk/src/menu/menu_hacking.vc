int nHackingCertainty;
int nHackingCertaintyDelay = 75;
string sHackingRandomPassword[5];
int nHackingRandomPasswordIndex;	//must always be less then sHackingRandomPassword.Length
string sHackingCompleteFunction;	//the function to run once a hack is successfull

void OpenHackingMenu(string sCompleteFunc)
{
	SetPause(1);
	
	sHackingCompleteFunction = sCompleteFunc;
	
	CreateMenu(100, 100, GetMenuTemplateIndex("MenuHacking"));
	
	nHackingRandomPasswordIndex = -1;
	
	HackingIncrementPasswordIndex();
	HackingCalculateCertainty();
	HackingCalculateRandomPassword();
}

void MenuHackingDraw()
{
	int img;
	int i;
	
	img = CreateWindow("Terminal", 100, 100, nTerminalFont);
	//TODO: take this crap out, and put in the real logic
	
	for(i=0;i<=nHackingRandomPasswordIndex;i++)
	{
		PrintString(8, 16 + (i*FontHeight(nTerminalFont)), img, nTerminalFont, sHackingRandomPassword[i]);
	}
		
	PrintString(40, 70, img, nDigitalFont, ThreeDigit(nHackingCertainty) + "%");

	Blit(nMenuX, nMenuY, img, screen);
	
	FreeImage(img);
}

void MenuHackingLogic()
{
	//on weapon key press, close the menu
	if(BUTTON_SHOOT)
	{
		CloseTopMenu();
	}
}

void MenuHackingClose()
{
	FreeDelayedCallbackByFunction("HackingCalculateCertainty");
	FreeDelayedCallbackByFunction("HackingCalculateRandomPassword");
	FreeDelayedCallbackByFunction("HackingIncrementPasswordIndex");
	
	SetPause(0);
}

void HackingCalculateCertainty()
{
	nHackingCertainty = random(1, 100);
	
	CreateDelayedCallbackEx(nHackingCertaintyDelay, "HackingCalculateCertainty", 1);
}

void HackingCalculateRandomPassword()
{
	int i;
	string sTempPassword = "";
	
	
	for(i=0;i<15;i++)
	{
		sTempPassword += chr(random(33, 122));
	}
	
	sHackingRandomPassword[nHackingRandomPasswordIndex] = sTempPassword;
	
	CreateDelayedCallbackEx(nHackingCertaintyDelay, "HackingCalculateRandomPassword", 1);
}

void HackingIncrementPasswordIndex()
{
	nHackingRandomPasswordIndex++;
	
	if(nHackingRandomPasswordIndex < 5)
	{
		CreateDelayedCallbackEx(nHackingCertaintyDelay*4, "HackingIncrementPasswordIndex", 1);
	}
	else
	{
		nHackingRandomPasswordIndex = 4;
		
		//hack complete. Close this menu and run the function passed to OpenHackingMenu().
		CloseTopMenu();
		CallFunction(sHackingCompleteFunction);
	}
}