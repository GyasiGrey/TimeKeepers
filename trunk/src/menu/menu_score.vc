int nScoreAnim;
int bMenuScoreHold;

void OpenMenuScore()
{
	SetPause(1);
	
	nPointerPos = 0;
	nScoreAnim = LoadAnimationEX("cursor.png", 8, 8, 132, 186, ANIMATION_CURSOR_ANIM_STRING);
	anims[nScoreAnim].automatic = 0;
	
	CreateMenu(110, 120, GetMenuTemplateIndex("MenuScore"));
	
	//store dual retrace counter
	StoreDualCounter();

	bMenuScoreHold = 1;
	
	//change counter so render() dosen't have a seisure	
	nDualCounter = 0;

	while(bMenuScoreHold)
	{
		Render();
		ShowPage();
	}

	RestoreDualCounter();
}


void MenuScoreDraw()
{

	int i;
	string tmp;
	int img = CreateWindow("Score", 120, 80, nTerminalFont);
	
	PrintString(8, 16, img, nTerminalFont, "Enemies killed:");
	PrintString(110, 16, img, nTerminalFont, str(nEnemiesKilled));
	PrintString(8, 24, img, nTerminalFont, "Enemies tranq'd:");
	PrintString(110, 24, img, nTerminalFont, str(nEnemiesTranqd));
	PrintString(8, 32, img, nTerminalFont, "Silent kills:");
	PrintString(110, 32, img, nTerminalFont, str(nSilentKills));
	PrintString(8, 40, img, nTerminalFont, "Medkits used:");
	PrintString(110, 40, img, nTerminalFont, str(nMedkitsUsed));
	PrintString(8, 48, img, nTerminalFont, "Time spent:");
	PrintRight(115, 48, img, nTerminalFont, TicksToHMSC(vcTimer[TIMER_MISSION_TIME_SPENT].nTick));
	PrintString(8, 56, img, nTerminalFont, "Final score:");
	PrintString(110, 56, img, nTerminalFont, str(CalculateMissionScore(1)));	//todo: get a variable for mission number. Pass it here.
	
	PrintString(30, 66, img, nTerminalFont, "Upload score");
	PrintString(90, 66, img, nTerminalFont, "Quit");
	
	Blit(nMenuX, nMenuY, img, screen);	
	FreeImage(img);
	
	DrawAnimation(nScoreAnim);
}

void MenuScoreLogic()
{
	if(up)
	{
		SoundKeyboardRand();
		
		if(nPointerPos > 0)
			nPointerPos--;
		else 
			nPointerPos = 4;
			
		unpress(5);
	}
	else if(down)
	{
		SoundKeyboardRand();
		
		if(nPointerPos < 4)
			nPointerPos++;
		else
			nPointerPos = 0;
			
		unpress(6);
	}
	else if(BUTTON_SHOOT || BUTTON_MEDKIT)
	{
		UnpressButtons();
		SoundKeyboardRand();
		CloseTopMenu();
	}
}

void MenuScoreClose()
{
	bMenuScoreHold = 0;
	FreeAnimation(nScoreAnim);
	
	SetPause(0);
}
